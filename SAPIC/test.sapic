
theory Test
begin

builtins:
	symmetric-encryption




let Alice =
    new ~nonceA;
    !(
        event GeneratedNonceA( ~nonceA ); // add from B
        out(senc(~nonceA,~tlsA));
        in(senc(nonceB,~tlsA));
        0
        
    )

let Bob =
    new ~nonceB;
    !(
        event GeneratedNonceB( ~nonceB ); // add from B
        in(senc(nonceA,~tlsB));
        out(senc(~nonceB,~tlsB));
        0
    
    )

let Charlie =
    !(
        in(senc(nonceAC,~tlsA));
        
        event ReceivedNonceA(nonceAC);
        out(senc(nonceAC,~tlsB)); //<---- partial deconsturction , tamarain does no where this come from

        in(senc(nonceBC,~tlsB));

        event ReceivedNonceB(nonceBC);
        out(senc(nonceBC,~tlsA)); //<---- partial deconsturction , tamarain does no where this come from

        event Debug();
        0
    )

new ~id;
new ~tlsA;
new ~tlsB;

(!Alice ||!Bob ||Charlie )



lemma Debug:
    exists-trace
    "Ex #i. Debug()@i"

end

/*
==============================================================================
summary of summaries:

analyzed: KnoxV2.sapic

  Correctness_D (exists-trace): verified (9 steps)

==============================================================================
*/