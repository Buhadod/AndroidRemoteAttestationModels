lemma SecretValidity:
	all-traces
		"All secret #j #k. SecretReceivedatDevice(secret,'valid')@j & SecretReceivedAppStatus(secret,'valid')@k ==>
		(Ex #i. SecretGenerated(secret) @i & (#i<#j) & (#j<#k))"

		
// SecretIntegrity lemmas 

//Desc: Doliv-yao should not be able to know secrets generated by an honest developer
//For all secrets, generated by an honest developer, then there is no exist an advsery know at least one of these secrets.
lemma SecretSecrecy:
	all-traces
		"All secret #i. SecretGenerated(secret) @i ==> (not(Ex #k. KU(secret)@k & (#i<#k)))"

//Desc: Repacked app should not be able to know secrets generated by an honest developer
//For all secrets, generated by an honest developer, and receved by a valid device => then, there is no exist a secret recvied by an arbitrary app.
lemma SecretSecrecyAgainstRepakedApp:
	all-traces
		"All secret #i . SecretGenerated(secret) @i  ==>
			(not(Ex #k. SecretReceivedAppStatus(secret,'invalid')@k  & (#i<#k) ))"

//Desc: Rooted device should not be able to know secrets generated by an honest developer
//For all traces, it is not possibile for a secret generated by an honest developer to be retrieved/known/leaked by a rooted device.
lemma SecretSecrecyAgainstRootedDevice:
	all-traces
		"All secret #i. SecretGenerated(secret) @i ==> (not(Ex #j. SecretReceivedatDevice(secret,'invalid')@j & (#i<#j)))"





//Code injection on honest apps lemmas

//Desc: KU advseray should not be able to inject code into an honest app that run on an honest device 
//For all secrets that recieved by a valid device and loaded by an honest app to be known by adversary
lemma CodeInjection:
	all-traces
		"All secret #i #k.SecretReceivedatDevice(secret,'valid')@i &  KU(secret) @k  ==>
			(not(Ex #j. SecretReceivedAppStatus(secret,'valid')@j & (#i<#j)))"

//can rooted device, inecjt valid app? yes becuase the device rooted. full control over everything
// Code injection on rooted device : It is a possibile for a remote advsery to inject a source code intro an honest app  if the device under the attacker control.
// lemma CodeInjectionByRootedDevice:
// exists-trace
// 		"(Ex secret #i #j #k. SecretReceivedatDevice(secret,'invalid')@i & SecretReceivedAppStatus(secret,'valid')@j & KU(secret)@k  & (#i<#j))"



#######################################################################################################


lemma SecretValidity:
	all-traces
		"All secret #i. SecretReceivedAppStatus(secret,'valid')@k ==>
		(Ex #i. SecretGenerated(secret) @i & SecretReceivedatDevice(secret,'valid')@j &  (#i<#j) & (#j<#k))"


lemma SecretValidity:
	all-traces
		"All secret #i. SecretReceivedatDevice(secret,'valid')@j ==>
		(Ex #i. SecretGenerated(secret) @i & (#i<#j)"
		



